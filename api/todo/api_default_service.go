/*
 * Todo API
 *
 * A simple Todo API
 *
 * API version: 1.0.0
 * Contact: darko@krizic.net
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package todo

import (
	"context"
	"net/http"
	"errors"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// CreateTodo - Create a todo
func (s *DefaultApiService) CreateTodo(ctx context.Context, todo Todo) (ImplResponse, error) {
	// TODO - update CreateTodo with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, Todo{}) or use other options such as http.Ok ...
	//return Response(201, Todo{}), nil

	//TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	//return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateTodo method not implemented")
}

// DeleteTodo - Delete a todo
func (s *DefaultApiService) DeleteTodo(ctx context.Context, todoId string) (ImplResponse, error) {
	// TODO - update DeleteTodo with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	//return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteTodo method not implemented")
}

// GetAllTodos - Get all todos
func (s *DefaultApiService) GetAllTodos(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAllTodos with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Todo{}) or use other options such as http.Ok ...
	//return Response(200, []Todo{}), nil

	//TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	//return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAllTodos method not implemented")
}

// GetTodo - Get a todo
func (s *DefaultApiService) GetTodo(ctx context.Context, todoId string) (ImplResponse, error) {
	// TODO - update GetTodo with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Todo{}) or use other options such as http.Ok ...
	//return Response(200, Todo{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	//return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTodo method not implemented")
}

// UpdateTodo - Update a todo
func (s *DefaultApiService) UpdateTodo(ctx context.Context, todoId string, todo Todo) (ImplResponse, error) {
	// TODO - update UpdateTodo with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Todo{}) or use other options such as http.Ok ...
	//return Response(200, Todo{}), nil

	//TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	//return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateTodo method not implemented")
}
