/*
 * Todo API
 *
 * A simple Todo API
 *
 * API version: 1.0.0
 * Contact: darko@krizic.net
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package todo

type Change struct {

	Before Todo `json:"before,omitempty"`

	After Todo `json:"after,omitempty"`

	ChangeType ChangeType `json:"changeType,omitempty"`
}

// AssertChangeRequired checks if the required fields are not zero-ed
func AssertChangeRequired(obj Change) error {
	if err := AssertTodoRequired(obj.Before); err != nil {
		return err
	}
	if err := AssertTodoRequired(obj.After); err != nil {
		return err
	}
	return nil
}

// AssertRecurseChangeRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Change (e.g. [][]Change), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseChangeRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aChange, ok := obj.(Change)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertChangeRequired(aChange)
	})
}
